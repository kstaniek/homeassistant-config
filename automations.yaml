- alias: Doorbird Doorbell 
  initial_state: 'on'
  trigger:
    platform: event
    event_type: doorbird_main_door_button
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: media_player.mpd_kitchen
      state: 'off'
    - condition: state
      entity_id: media_player.mpd_wc
      state: 'off'
    - condition: state
      entity_id: media_player.mpd_terrace
      state: 'off'

  action:
    - service: tts.amazon_polly_say
      entity_id: 
      - media_player.mpd_kitchen
      - media_player.mpd_wc
      - media_player.mpd_terrace
      data:
        message: "<speak>Ktoś dzwoni do drzwi!</speak>"
      
- alias: Doorbird Motion
  initial_state: 'on'
  trigger:
    platform: event
    event_type: doorbird_main_door_motion
  condition:
    condition: state
    entity_id: binary_sensor.00001ecc_armed_3
    state: 'on'
  action:
    service: tts.amazon_polly_say
    entity_id: 
      - media_player.mpd_kitchen
      - media_player.mpd_wc
      - media_player.mpd_terrace
    data:
      message: "<speak>Ktoś zbliżył się do drzwi!</speak>"
      
- alias: Klaudiusz at Home
  trigger:
    platform: state
    entity_id: device_tracker.emperor
    from: 'not_home'
    to: 'home'
  action:
    service: notify.telegram
    data:
      title: '*Presence*'
      message: 'Klaudiusz is now home'
      
     
- alias: RAM Monitor
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sensor.ram_used_2
    above: 50
    for:
      minutes: 1
  action:
    - service: notify.mr_homn
      data:
        title: "Uwaga"
        message: "Zużycie pamięci przekroczyło 50% w ciągu ostatniej minuty"
        
- alias: Enable First Morning Trigger
  trigger:
    - platform: time
      at: '5:00'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.trigger_first_morning

# turns it off an hour after sunrise
- alias: Disable First Morning Trigger
  trigger:
    - platform: sun
      event: sunrise
      offset: "06:00:00"
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.trigger_first_morning


- alias: First Morning Motion
  trigger:
    - platform: state
      entity_id: binary_sensor.m_curtain_groundfloor
      to: 'on'
    - platform: state
      entity_id: binary_sensor.m_kitchen
      to: 'on'
    - platform: state
      entity_id: binary_sensor.m_salon
      to: 'on'
  # only complete the automation if we're still waiting for the first motion
  condition:
      condition: state
      entity_id: input_boolean.trigger_first_morning
      state: 'on'

  action:
    # turn off the "waiting" boolean regardless of whether lights will turn on
    # so that this happens only once
    - service: homeassistant.turn_off
      entity_id: input_boolean.trigger_first_morning
      
    - service: cover.open_cover_tilt
      entity_id:
        - cover.c_kitchen_east
        - cover.c_kitchen_north
        - cover.c_livingroom
        - cover.c_livingroom_terrace
        - cover.c_office_north
        - cover.c_office_west
        - cover.c_washing
        - cover.c_bonsai
        
    - service: media_player.volume_set
      entity_id: media_player.mpd_kitchen
      data:
        volume_level: 0.4
        
    - service: media_player.volume_set
      entity_id: media_player.mpd_wc
      data:
        volume_level: 0.3
        
    - service: tts.amazon_polly_say
      entity_id: media_player.mpd_kitchen
      data_template:
        message: >
            <speak>
            {{ ["Dzień dobry!", "Witam, jak się masz?", "Dzień dobry. Czy masz ochotę na kawę?", 
            "Zapowiada się piękny dzień!", "Cześć! Dobrze że ktoś już wreszcie wstał!",
            "Cześć, może szklaneczkę wody?"] | random }}
            </speak>

    - condition: or
      conditions:
        - condition: time
          weekday:
            - wed

    - service: tts.amazon_polly_say
      entity_id: media_player.mpd_kitchen
      data:
        message: "<speak>Dziś środa. Nie zapomnij wystawić śmieci.</speak>"


- alias: 'Set night volume'
  trigger:
    - platform: time
      at: '20:00'
  action:
    - service: media_player.volume_set
      entity_id: media_player.mpd_kitchen
      data:
        volume_level: 0.05
    - service: media_player.volume_set
      entity_id: media_player.mpd_terrace
      data:
        volume_level: 0.05
        
    - service: media_player.volume_set
      entity_id: media_player.mpd_wc
      data:
        volume_level: 0.05
# Blind

- alias: 'Close blind at dusk'
  trigger:
    platform: numeric_state
    entity_id: sun.sun
    value_template: '{{ state.attributes.elevation }}'
    below: -10.0

  action:
    - service: cover.close_cover_tilt
      entity_id:
        - cover.c_kitchen_east
        - cover.c_kitchen_north
        - cover.c_livingroom
        - cover.c_livingroom_terrace
        - cover.c_masterbathroom
        - cover.c_masterbedroom
        - cover.c_masterbedroom_wardrobe
        - cover.c_office_north
        - cover.c_office_west
        - cover.c_washing
        - cover.c_emily
        - cover.c_bonsai
        - cover.c_alice
        - cover.c_julia
    - service: automation.turn_off
      entity_id: automation.close_blind_at_dusk
      
- alias: 'Activate close blind on dusk'
  trigger: 
    - platform: time
      at: '14:00'
  action:
    - service: automation.turn_on
      entity_id: automation.close_blind_at_dusk
    

- alias: 'Main Door Open'
  trigger:
    platform: state
    entity_id: binary_sensor.d_main
    to: 'on'
    for:
      seconds: 2
  
  action:
    - service: notify.iphones
      data:
        message: "request_location_update"
        
    - service: media_player.play_media
      data:
        entity_id: media_player.mpd_kitchen
        media_content_id: "http://172.31.20.50:8123/local/door_open.mp3"
        media_content_type: "MUSIC"
      

- alias: 'Open blind at the morning'
  trigger:
    platform: time
    at: '8:30'
  
  action:
    - service: cover.open_cover_tilt
      entity_id:
        - cover.c_kitchen_east
        - cover.c_kitchen_north
        - cover.c_livingroom
        - cover.c_livingroom_terrace
        - cover.c_masterbathroom
        - cover.c_masterbedroom
        - cover.c_masterbedroom_wardrobe
        - cover.c_office_north
        - cover.c_office_west
        - cover.c_washing
        - cover.c_emily
        - cover.c_bonsai
        - cover.c_alice
        - cover.c_julia

- alias: "Report travel time"
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/traffic'
  action:
    - service: notify.telegram
      data:
        title: '*Travel*'
        message: >-
          Szacowany czas przejazdu z domu:
          - {{ states.sensor.travel_home_emily_school.attributes['friendly_name'] }} {{ states.sensor.travel_home_emily_school.state }} {{ states.sensor.travel_home_emily_school.attributes['unit_of_measurement'] }},
          - {{ states.sensor.travel_home_galeria.attributes['friendly_name'] }} {{ states.sensor.travel_home_galeria.state }} {{ states.sensor.travel_home_galeria.attributes['unit_of_measurement'] }},
          - {{ states.sensor.travel_home_medicover_graniczna.attributes['friendly_name'] }} {{ states.sensor.travel_home_medicover_graniczna.state }} {{ states.sensor.travel_home_medicover_graniczna.attributes['unit_of_measurement'] }},
          - {{ states.sensor.travel_home_medicover_chorzowska.attributes['friendly_name'] }} {{ states.sensor.travel_home_medicover_chorzowska.state }} {{ states.sensor.travel_home_medicover_chorzowska.attributes['unit_of_measurement'] }}.

    - service: tts.amazon_polly_say
      entity_id: 
        - media_player.mpd_kitchen
      data_template:
        message: >-
          <speak>
              Szacowany czas przejazdu z domu:
              {{ states.sensor.travel_home_emily_school.attributes['friendly_name'] }} <say-as interpret-as="time">{{ states.sensor.travel_home_emily_school.state }}'0"</say-as>, 
              {{ states.sensor.travel_home_galeria.attributes['friendly_name'] }} <say-as interpret-as="time">{{ states.sensor.travel_home_galeria.state }}'0"</say-as>,
              {{ states.sensor.travel_home_medicover_graniczna.attributes['friendly_name'] }} <say-as interpret-as="time">{{ states.sensor.travel_home_medicover_graniczna.state }}'0"</say-as>,
              {{ states.sensor.travel_home_medicover_chorzowska.attributes['friendly_name'] }} <say-as interpret-as="time">{{ states.sensor.travel_home_medicover_chorzowska.state }}'0"</say-as>.
          </speak>
